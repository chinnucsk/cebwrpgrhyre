#!/usr/bin/env escript

% Problem2:
% Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
% 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
% By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

-define(LIMIT, 4000000).

main(_) ->
	FibonacciTerms = fibonacci_sequence(?LIMIT),
	EvenFibonacciTerms = [X || X <- FibonacciTerms, X rem 2 =:= 0],
	Answer = lists:sum(EvenFibonacciTerms),
	io:format("Answer: ~w~n", [Answer]).

fibonacci_sequence(Limit) ->
	fibonacci_sequence_tr(Limit, [2,1]).

fibonacci_sequence_tr(Limit, [First|T] = Numbers) when First < Limit ->
	[Second | _] = T,
	Next = First + Second,
	fibonacci_sequence_tr(Limit, [Next|Numbers]);

fibonacci_sequence_tr(Limit, [H|T]) when H >= Limit ->
	T. 